import {
  require_classnames,
  useTheme
} from "./chunk-SV42QLF4.js";
import {
  require_jsx_runtime
} from "./chunk-35YTY4EE.js";
import {
  __toESM
} from "./chunk-DFKQJ226.js";

// node_modules/flowbite-react/lib/esm/components/Dropdown/DropdownItem.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_classnames = __toESM(require_classnames());

// node_modules/flowbite-react/lib/esm/helpers/mergeDeep.js
function isObject(item) {
  return item !== null && typeof item === "object" && item.constructor === Object;
}
function cloneDeep(source) {
  if (!isObject(source)) {
    return source;
  }
  const output = { ...source };
  Object.keys(source).forEach((key) => {
    output[key] = cloneDeep(source[key]);
  });
  return output;
}
function mergeDeep(target, source) {
  if (isObject(source) && Object.keys(source).length === 0) {
    return cloneDeep({ ...target, ...source });
  }
  const output = { ...target, ...source };
  if (isObject(source) && isObject(target)) {
    Object.keys(source).forEach((key) => {
      if (isObject(source[key]) && key in target && isObject(target[key])) {
        output[key] = mergeDeep(target[key], source[key]);
      } else {
        output[key] = isObject(source[key]) ? cloneDeep(source[key]) : source[key];
      }
    });
  }
  return output;
}

// node_modules/flowbite-react/lib/esm/components/Dropdown/DropdownItem.js
var DropdownItem = ({ children, className, icon: Icon, onClick, theme: customTheme = {}, ...props }) => {
  const theme = mergeDeep(useTheme().theme.dropdown.floating.item, customTheme);
  return (0, import_jsx_runtime.jsxs)("li", { className: (0, import_classnames.default)(theme.base, className), onClick, ...props, children: [Icon && (0, import_jsx_runtime.jsx)(Icon, { className: theme.icon }), children] });
};

export {
  mergeDeep,
  DropdownItem
};
//# sourceMappingURL=chunk-BEUEE3U6.js.map
